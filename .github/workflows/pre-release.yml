---
name: pre-release

on:
  push:
    branches: ["main"]
    paths-ignore:
      - "**.md"
  workflow_dispatch:

env:
  CARGO_TERM_COLOR: always

jobs:
  build-windows:
    name: "[Windows] Build and Publish"
    runs-on: windows-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: cargo build --release

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Publish files
        run: cargo make dist

      - name: Zip artifact for deployment
        run: Compress-Archive -Path dist/* -Destination windows.zip

      - name: Upload files
        uses: actions/upload-artifact@v4
        with:
          path: windows.zip
          name: windows

  build-ubuntu:
    name: "[Ubuntu] Build and Publish"
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4

      - name: Install dependencies
        run: ./install-build-deps.sh

      - name: Build
        run: cargo build --release

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Publish files
        run: cargo make dist

      - name: Zip artifact for deployment
        run: cd dist && zip ../linux.zip *

      - name: Upload files
        uses: actions/upload-artifact@v4
        with:
          path: linux.zip
          name: linux

  build-macos:
    name: "[Macos] Build and Publish"
    runs-on: macos-latest

    steps:
      - uses: actions/checkout@v4

      - name: Build
        run: cargo build --release

      - name: Install cargo-make
        uses: davidB/rust-cargo-make@v1

      - name: Publish files
        run: cargo make dist

      - name: Zip artifact for deployment
        run: cd dist && zip ../macos.zip *

      - name: Upload files
        uses: actions/upload-artifact@v4
        with:
          path: macos.zip
          name: macos

  pre-release:
    name: Pre-Release
    needs:
      - build-windows
      - build-ubuntu
      - build-macos
    runs-on: ubuntu-latest
    permissions:
      contents: "write"
      packages: "write"
      pull-requests: "read"

    steps:
      - name: Download files
        uses: actions/download-artifact@v4
        with:
          path: dist

      - name: Create Release
        uses: softprops/action-gh-release@v2
        with:
          token: "${{ secrets.GITHUB_TOKEN }}"
          tag_name: "latest"
          prerelease: true
          name: "Latest Build"
          files: dist/**/*
